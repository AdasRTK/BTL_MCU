/*
 * fsm_automatic.c
 *
 *  Created on: Oct 28, 2023
 *      Author: Admin
 */

#include "fsm_automatic.h"

int red_duration = 5;
int green_duration = 3;
int yellow_duration = 2;
int index_led = 0;
void setHorizontalLeds(int red, int green, int yellow){
	HAL_GPIO_WritePin(LED_RED_HORI_GPIO_Port, LED_RED_HORI_Pin, red);
	HAL_GPIO_WritePin(LED_YELLOW_HORI_GPIO_Port, LED_YELLOW_HORI_Pin, yellow);
	HAL_GPIO_WritePin(LED_GREEN_HORI_GPIO_Port, LED_GREEN_HORI_Pin, green);
}
void setVerticalLeds(int red, int green, int yellow){
	HAL_GPIO_WritePin(LED_RED_VERTI_GPIO_Port, LED_RED_VERTI_Pin, red);
	HAL_GPIO_WritePin(LED_YELLOW_VERTI_GPIO_Port, LED_YELLOW_VERTI_Pin, yellow);
	HAL_GPIO_WritePin(LED_GREEN_VERTI_GPIO_Port, LED_GREEN_VERTI_Pin, green);
}
void fsm_automatic_run(){
	switch(status) {
		case INIT:
			status = RED_GREEN;
			setTimer(green_duration*100, 0);
			break;
		case RED_GREEN:
			setHorizontalLeds(RESET,SET,SET);
			setVerticalLeds(SET,RESET, SET);

			if(timer_flag[0] == 1){
				setTimer(yellow_duration*100, 0);
				status = RED_YELLOW;
			}
			if(timer_flag[1] == 1){
				setTimer(100, 1);

			}
			if(timer_flag[2] == 1){
				update7SEG(index_led++);
				if(index_led >= 4) index_led = 0;
				setTimer(50, 2);
			}
			break;
		case RED_YELLOW:
			setHorizontalLeds(RESET,SET,SET);
			setVerticalLeds(SET,SET, RESET);
			if(timer_flag[0] == 1){
				setTimer(green_duration*100, 0);
				status = GREEN_RED;
			}
			break;
		case GREEN_RED:
			setHorizontalLeds(SET,RESET,SET);
			setVerticalLeds(RESET,SET,SET);
			if(timer_flag[0] == 1){
				setTimer(yellow_duration*100, 0);
				status = GREEN_YELLOW;
			}
			break;
		case GREEN_YELLOW:
			setHorizontalLeds(SET,RESET,SET);
			setVerticalLeds(SET,SET,RESET);
			if(timer_flag[0] == 1){
				setTimer(green_duration*100, 0);
				status = RED_GREEN;
			}
			break;
		default:
			break;
	}
};

